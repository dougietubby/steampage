(()=>{var W=(e,o)=>()=>(o||e((o={exports:{}}).exports,o),o.exports);var U=W((fe,P)=>{P.exports=window.Tablesort});var Y=U();function X(e){return e.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#039;")}function D(e,o){e=e||[];for(let t=0;t<e.length;t++)o(e[t])}function K(){return document.documentElement&&document.documentElement.scrollTop||document.body.scrollTop}function Z(){return window.matchMedia("only screen and (max-width: 680px)").matches}function I(e,o,t,n){Array.isArray(o)||(o=[o]),e.classList.add("animate__animated",...o);let s=()=>{e.classList.remove("animate__animated",...o),e.removeEventListener("animationend",s),typeof n=="function"&&n()};t||e.addEventListener("animationend",s)}function Q(){let e=document.getElementById("menu-toggle-mobile"),o=document.getElementById("menu-mobile");window.menuToggleMobileEventListener||(e.addEventListener("click",()=>{document.body.classList.toggle("blur"),e.classList.toggle("active"),o.classList.toggle("active")}),window.menuToggleMobileEventListener=!0),window._menuMobileOnClickMask=()=>{e.classList.remove("active"),o.classList.remove("active")},window.clickMaskEventSet.add(window._menuMobileOnClickMask)}function A(e){window.setTheme(e),window.saveTheme(e)}function ee(){Array.from(document.getElementsByClassName("theme-switch")).forEach(e=>{e.addEventListener("click",()=>{let o=document.body.getAttribute("theme");A(o==="dark"?"light":"dark");for(let t of window.switchThemeEventSet)t()})})}function te(){Array.from(document.getElementsByClassName("color-theme-select")).forEach(e=>{let o=document.body.getAttribute("theme");for(let t=0;t<e.options.length;t++)if(e.options[t].value===o){e.selectedIndex=t;break}e.addEventListener("change",()=>{let t=e.value;window.localStorage&&localStorage.setItem("theme",t),t!=="auto"?A(t):window.matchMedia&&window.matchMedia("(prefers-color-scheme: dark)").matches?A("dark"):A("light");for(let n of window.switchThemeEventSet)n()})})}function J(){let e=window.config.search,o=window.matchMedia&&window.matchMedia("only screen and (max-width: 680px)").matches;if(!e||o&&window._searchMobileOnce||!o&&window._searchDesktopOnce)return;let t=e.maxResultLength?e.maxResultLength:10,n=e.snippetLength?e.snippetLength:50,s=e.highlightTag?e.highlightTag:"em",i=e.isCaseSensitive?e.isCaseSensitive:!1,a=e.minMatchCharLength?e.minMatchCharLength:1,r=e.findAllMatches?e.findAllMatches:!1,c=e.location?e.location:0,k=e.threshold?e.threshold:.3,C=e.distance?e.distance:100,b=e.ignoreLocation?e.ignoreLocation:!1,O=e.useExtendedSearch?e.useExtendedSearch:!1,H=e.ignoreFieldNorm?e.ignoreFieldNorm:!1,m=o?"mobile":"desktop",L=document.getElementById(`header-${m}`),l=document.getElementById(`search-input-${m}`),B=document.getElementById(`search-toggle-${m}`),_=document.getElementById(`search-loading-${m}`),p=document.getElementById(`search-clear-${m}`),z=window.config["autocomplete.min.js"],F=window.config["algoliasearch.min.js"],R=window.config["fuse.min.js"];o?(window._searchMobileOnce=!0,l.addEventListener("focus",()=>{M("autocomplete-script",z,()=>{j(),l.focus()}),window.config?.search?.type==="algolia"?M("algolia-script",F,null):M("fuse-script",R,null),document.body.classList.add("blur"),L.classList.add("open"),l.focus()}),document.getElementById("search-cancel-mobile").addEventListener("click",()=>{L.classList.remove("open"),document.body.classList.remove("blur"),document.getElementById("menu-toggle-mobile").classList.remove("active"),document.getElementById("menu-mobile").classList.remove("active"),_.style.display="none",p.style.display="none",window._searchMobile&&window._searchMobile.autocomplete.setVal("")}),p.addEventListener("click",()=>{p.style.display="none",window._searchMobile&&window._searchMobile.autocomplete.setVal("")},!1),window._searchMobileOnClickMask=()=>{L.classList.remove("open"),_.style.display="none",p.style.display="none",window._searchMobile&&window._searchMobile.autocomplete.setVal("")},window.clickMaskEventSet.add(window._searchMobileOnClickMask)):(window._searchDesktopOnce=!0,B.addEventListener("click",()=>{M("autocomplete-script",z,()=>{j(),l.focus()}),window.config?.search?.type==="algolia"?M("algolia-script",F,null):M("fuse-script",R,null),document.body.classList.add("blur"),L.classList.add("open"),l.focus()}),p.addEventListener("click",()=>{p.style.display="none",window._searchDesktop&&window._searchDesktop.autocomplete.setVal("")}),document.addEventListener("keydown",v=>{v.ctrlKey&&v.code==="KeyK"&&(v.preventDefault(),B.click())}),window._searchDesktopOnClickMask=()=>{L.classList.remove("open"),_.style.display="none",p.style.display="none",window._searchDesktop&&window._searchDesktop.autocomplete.setVal("")},window.clickMaskEventSet.add(window._searchDesktopOnClickMask)),l.addEventListener("input",()=>{l.value===""?p.style.display="none":p.style.display="inline"});let j=()=>{let v=autocomplete(`#search-input-${m}`,{hint:!1,autoselect:!0,dropdownMenuContainer:`#search-dropdown-${m}`,clearOnSelected:!1,cssClasses:{noPrefix:!0},debug:!0},{name:"search",source:(h,T)=>{_.style.display="inline",p.style.display="none";let g=d=>{_.style.display="none",p.style.display="inline",T(d)};if(e.type==="algolia")window._algoliaIndex=window._algoliaIndex||algoliasearch(e.algoliaAppID,e.algoliaSearchKey).initIndex(e.algoliaIndex),window._algoliaIndex.search(h,{offset:0,length:t*8,attributesToHighlight:["title"],attributesToRetrieve:["*"],attributesToSnippet:[`content:${n}`],highlightPreTag:`<${s}>`,highlightPostTag:`</${s}>`}).then(({hits:d})=>{let u={};d.forEach(({uri:f,date:V,_highlightResult:{title:$},_snippetResult:{content:S}})=>{u[f]&&u[f].context.length>S.value||(u[f]={uri:f,title:$.value,date:V,context:S.value})}),g(Object.values(u).slice(0,t))}).catch(d=>{console.error(d),g([])});else if(e.type==="fuse"){let d=()=>{let u={};return window._index.search(h).forEach(({item:f,refIndex:V,matches:$})=>{let S=f.title,x=f.content;$.forEach(({indices:E,value:he,key:G})=>{if(G==="content"){let y=0;for(let w=0;w<E.length;w++){let N=x.substring(E[w][0]+y,E[w][1]+1+y),q=`<${s}>`+N+`</${s}>`;x=x.substring(0,E[w][0]+y)+q+x.substring(E[w][1]+1+y,x.length),y+=s.length*2+5}}else if(G==="title"){let y=0;for(let w=0;w<E.length;w++){let N=S.substring(E[w][0]+y,E[w][1]+1+y),q=`<${s}>`+N+`</${s}>`;S=S.substring(0,E[w][0]+y)+q+S.substring(E[w][1]+1+y,x.length),y+=s.length*2+5}}}),u[f.uri]={uri:f.uri,title:S,date:f.date,context:x}}),Object.values(u).slice(0,t)};window._index?g(d()):fetch(e.fuseIndexURL).then(u=>u.json()).then(u=>{let f={isCaseSensitive:i,findAllMatches:r,minMatchCharLength:a,location:c,threshold:k,distance:C,ignoreLocation:b,useExtendedSearch:O,ignoreFieldNorm:H,includeScore:!1,shouldSort:!0,includeMatches:!0,keys:["content","title"]};window._index=new Fuse(u,f),g(d())}).catch(u=>{console.error(u),g([])})}},templates:{suggestion:({title:h,uri:T,date:g,context:d})=>`<div><a href=${T}><span class="suggestion-title">${h}</span></a><span class="suggestion-date">${g}</span></div><div class="suggestion-context">${d}</div>`,empty:({query:h})=>`<div class="search-empty">${e.noResultsFound}: <span class="search-query">"${X(h)}"</span></div>`,footer:()=>{let{searchType:h,icon:T,href:g}=e.type==="algolia"?{searchType:"algolia",icon:'<svg class="icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M229.3 182.6c-49.3 0-89.2 39.9-89.2 89.2 0 49.3 39.9 89.2 89.2 89.2s89.2-39.9 89.2-89.2c0-49.3-40-89.2-89.2-89.2zm62.7 56.6l-58.9 30.6c-1.8.9-3.8-.4-3.8-2.3V201c0-1.5 1.3-2.7 2.7-2.6 26.2 1 48.9 15.7 61.1 37.1.7 1.3.2 3-1.1 3.7zM389.1 32H58.9C26.4 32 0 58.4 0 90.9V421c0 32.6 26.4 59 58.9 59H389c32.6 0 58.9-26.4 58.9-58.9V90.9C448 58.4 421.6 32 389.1 32zm-202.6 84.7c0-10.8 8.7-19.5 19.5-19.5h45.3c10.8 0 19.5 8.7 19.5 19.5v15.4c0 1.8-1.7 3-3.3 2.5-12.3-3.4-25.1-5.1-38.1-5.1-13.5 0-26.7 1.8-39.4 5.5-1.7.5-3.4-.8-3.4-2.5v-15.8zm-84.4 37l9.2-9.2c7.6-7.6 19.9-7.6 27.5 0l7.7 7.7c1.1 1.1 1 3-.3 4-6.2 4.5-12.1 9.4-17.6 14.9-5.4 5.4-10.4 11.3-14.8 17.4-1 1.3-2.9 1.5-4 .3l-7.7-7.7c-7.6-7.5-7.6-19.8 0-27.4zm127.2 244.8c-70 0-126.6-56.7-126.6-126.6s56.7-126.6 126.6-126.6c70 0 126.6 56.6 126.6 126.6 0 69.8-56.7 126.6-126.6 126.6z"/></svg>',href:"https://www.algolia.com/"}:{searchType:"Fuse.js",icon:"",href:"https://fusejs.io/"};return`<div class="search-footer">Search by <a href="${g}" rel="noopener noreffer" target="_blank">${T} ${h}</a></div>`}}});v.on("autocomplete:selected",(h,T,g,d)=>{h.preventDefault()}),o?window._searchMobile=v:window._searchDesktop=v};function M(v,h,T){if(document.querySelector(`#${v}`)===null){let g=document.querySelector("head"),d=document.createElement("script");d.setAttribute("src",h),d.setAttribute("id",v),d.onload=T,g.appendChild(d)}}}function oe(){document.querySelectorAll(".details").forEach(e=>{let o=e.getElementsByClassName("details-summary")[0],t=o.nextElementSibling;e.classList.contains("open")&&(t.style.maxHeight=t.scrollHeight+"px"),o.addEventListener("click",()=>{e.classList.contains("open")?t.style.maxHeight="0px":t.style.maxHeight=t.scrollHeight+"px",e.classList.toggle("open")},!1),addEventListener("beforeprint",()=>{e.classList.contains("open")||o.click()})})}function ne(){window.config.lightGallery&&lightGallery(document.getElementById("content"),window.config.lightGallery)}function se(){D(document.querySelectorAll(".content table"),e=>{let o=document.createElement("div");o.className="table-wrapper",e.parentElement.replaceChild(o,e),o.appendChild(e),window.config?.table?.sort&&new Y(e)})}function ie(){let e=document.getElementById("TableOfContents");if(e===null)return;let o=window.matchMedia&&window.matchMedia("only screen and (max-width: 1000px)").matches;if(document.getElementById("toc-static").getAttribute("kept")||o)window._tocOnScroll&&window.scrollEventSet.delete(window._tocOnScroll);else{let t=document.getElementById("toc-auto"),n=e.querySelectorAll("a:first-child"),s=e.getElementsByTagName("li"),i=document.getElementsByClassName("headerLink"),a=document.body.getAttribute("header-desktop")!=="normal",r=document.getElementById("header-desktop").offsetHeight,c=20+(a?r:0),k=t.offsetTop,C=k-c+(a?0:r);window._tocOnScroll=window._tocOnScroll||(()=>{let O=document.getElementById("post-footer").offsetTop-t.getBoundingClientRect().height,H=O-c+(a?0:r);if(window.newScrollTop<C?(t.style.position="absolute",t.style.top=`${k}px`):window.newScrollTop>H?(t.style.position="absolute",t.style.top=`${O}px`):(t.style.position="fixed",t.style.top=`${c}px`),n.length===0)return;let m=-1,L=c+window.newScrollTop;if(i[i.length-1].offsetTop<L)m=i.length-1;else for(let l=0;l<i.length-1;l++){let B=i[l].offsetTop,_=i[l+1].offsetTop;if(B<=L&&_>L){m=l;break}}if(Array.from(n).forEach(l=>l.classList.remove("active")),Array.from(s).forEach(l=>l.classList.remove("has-active")),m>=0&&m<n.length){n[m].classList.add("active");let l=n[m].parentElement;for(;l!==e;)l.classList.add("has-active"),l=l.parentElement.parentElement}}),window._tocOnScroll(),window.scrollEventSet.add(window._tocOnScroll)}}function le(){window.config.mapbox&&(mapboxgl.accessToken=window.config.mapbox.accessToken,mapboxgl.setRTLTextPlugin(window.config.mapbox.RTLTextPlugin),window._mapboxArr=window._mapboxArr||[],D(document.getElementsByClassName("mapbox"),e=>{let{lng:o,lat:t,zoom:n,lightStyle:s,darkStyle:i,marked:a,navigation:r,geolocate:c,scale:k,fullscreen:C}=window.config.data[e.id],b=new mapboxgl.Map({container:e,center:[o,t],zoom:n,minZoom:.2,style:window.isDark?i:s,attributionControl:!1});a&&new mapboxgl.Marker().setLngLat([o,t]).addTo(b),r&&b.addControl(new mapboxgl.NavigationControl,"bottom-right"),c&&b.addControl(new mapboxgl.GeolocateControl({positionOptions:{enableHighAccuracy:!0},showUserLocation:!0,trackUserLocation:!0}),"bottom-right"),k&&b.addControl(new mapboxgl.ScaleControl),C&&b.addControl(new mapboxgl.FullscreenControl),b.addControl(new MapboxLanguage),window._mapboxArr.push(b)}),window._mapboxOnSwitchTheme=()=>{D(window._mapboxArr,e=>{let o=e.getContainer(),{lightStyle:t,darkStyle:n}=window.config.data[o.id];e.setStyle(window.isDark?n:t),e.addControl(new MapboxLanguage)})},window.switchThemeEventSet.add(window._mapboxOnSwitchTheme))}function ae(){if(window.config.typeit){let e=window.config.typeit,o=e.speed?e.speed:100,t=e.cursorSpeed?e.cursorSpeed:1e3,n=e.cursorChar?e.cursorChar:"|";Object.values(e.data).forEach(s=>{let i=a=>{let r=s[a];if(!document.getElementById(r).hasAttribute("data-typeit-id")){let c=new TypeIt(`#${r}`,{strings:window.config.data[r],speed:o,lifeLike:!0,cursorSpeed:t,cursorChar:n,waitUntilVisible:!0,afterComplete:()=>{if(a===s.length-1){e.duration>=0&&window.setTimeout(()=>{c.destroy()},e.duration);return}c.destroy(),i(a+1)}}).go()}};i(0)})}}function ce(){function e(n){let s=document.getElementsByTagName("meta");for(let i=0;i<s.length;i++)if(s[i].getAttribute("name")===n)return s[i]}let o=e("theme-color"),t={light:"#f8f8f8",dark:"#161b22"};window._metaThemeColorOnSwitchTheme=()=>{o.content=t[document.body.getAttribute("theme")]},window.switchThemeEventSet.add(window._metaThemeColorOnSwitchTheme),window._metaThemeColorOnSwitchTheme()}function re(){let e=[],o=document.getElementById("view-comments");document.body.getAttribute("header-desktop")==="auto"&&e.push(document.getElementById("header-desktop")),document.body.getAttribute("header-mobile")==="auto"&&e.push(document.getElementById("header-mobile")),document.getElementById("comments")?(o.href="#comments",o.style.display="block"):o.style.display="null";let t=document.getElementById("fixed-buttons"),n=20,s=100;function i(){window.newScrollTop=K();let a=window.newScrollTop-window.oldScrollTop,r=Z();D(e,c=>{a>n?(c.classList.remove("animate__fadeInDown"),I(c,["animate__fadeOutUp","animate__faster"],!0)):(a<-n||window.newScrollTop<=20)&&(c.classList.remove("animate__fadeOutUp"),I(c,["animate__fadeInDown","animate__faster"],!0))}),window.newScrollTop>s?r&&a>n?(t.classList.remove("animate__fadeIn"),I(t,["animate__fadeOut","animate__faster"],!0)):(!r||a<-n)&&(t.style.display="block",t.classList.remove("animate__fadeOut"),I(t,["animate__fadeIn","animate__faster"],!0)):(r||(t.classList.remove("animate__fadeIn"),I(t,["animate__fadeOut","animate__faster"],!0)),t.style.display="none");for(let c of window.scrollEventSet)c();window.oldScrollTop=window.newScrollTop}window.addEventListener("scroll",i,!1)}function de(){window.addEventListener("resize",()=>{window._resizeTimeout||(window._resizeTimeout=window.setTimeout(()=>{window._resizeTimeout=null;for(let e of window.resizeEventSet)e();J()},100))},!1)}function me(){document.getElementById("mask").addEventListener("click",()=>{for(let e of window.clickMaskEventSet)e();document.body.classList.remove("blur")},!1)}function ue(){document.querySelectorAll(".code-block").forEach(e=>{let o=e.querySelector("div.code-block-title-bar"),t=e.querySelector("code.chroma"),n=e.querySelector("button.copy-code-button"),s=n.querySelector("span.copy-icon"),i=n.querySelector("span.check-icon"),a=e.querySelector("button.wrap-code-button"),r=e.querySelector("button.line-number-button");t.style.maxHeight=t.scrollHeight+10+"px",o.addEventListener("click",()=>{e.classList.toggle("is-open"),e.classList.toggle("is-closed")}),n?.addEventListener("click",()=>{navigator.clipboard.writeText(t.innerText),s.style.display="none",i.style.display="block",setTimeout(()=>{s.style.display="block",i.style.display="none"},3e3)}),a?.addEventListener("click",()=>{t.style.maxHeight="fit-content",e.classList.toggle("is-wrap"),t.style.maxHeight=t.scrollHeight+10+"px"}),r.addEventListener("click",()=>{e.classList.toggle("show-line-numbers")}),addEventListener("beforeprint",c=>{e.classList.contains("is-closed")&&o.click(),e.classList.contains("is-wrap")||a.click()})})}function we(){window.isDark=document.body.getAttribute("theme")!=="light",window.newScrollTop=K(),window.oldScrollTop=window.newScrollTop,window.scrollEventSet=new Set,window.resizeEventSet=new Set,window.clickMaskEventSet=new Set,window.objectFitImages&&objectFitImages(),Q(),ee(),te(),ce(),J(),ue(),oe(),ne(),se(),ae(),le(),ie(),re(),de(),me()}we();})();
//# sourceMappingURL=data:application/json;base64,
